>From f3868cd2af6a898b56e1412aedb9067210eb4fee Mon Sep 17 00:00:00 2001
From: Jussi Kivilinna <jussi.kivilinna@iki.fi>
Date: Mon, 25 Jan 2021 21:00:00 +0200
Subject: [PATCH] blake2: fix RIP register access for AVX/AVX2 implementations

* cipher/blake2b-amd64-avx2.S: Use rRIP instead of (RIP).
* cipher/blake2s-amd64-avx.S: Use rRIP instead of (RIP).
--

Reported-by: Konstantin Ryabitsev <konstantin@linuxfoundation.org>
Signed-off-by: Jussi Kivilinna <jussi.kivilinna@iki.fi>
---
 cipher/blake2b-amd64-avx2.S | 12 ++++++------
 cipher/blake2s-amd64-avx.S  | 12 ++++++------
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/cipher/blake2b-amd64-avx2.S b/cipher/blake2b-amd64-avx2.S
index 08c816cd..357e8a51 100644
--- a/cipher/blake2b-amd64-avx2.S
+++ b/cipher/blake2b-amd64-avx2.S
@@ -214,11 +214,11 @@ _gcry_blake2b_transform_amd64_avx2:
         addq $128, (STATE_T + 0)(RSTATE);
         adcq $0, (STATE_T + 8)(RSTATE);
 
-        vbroadcasti128 .Lshuf_ror16 (RIP), R16;
-        vbroadcasti128 .Lshuf_ror24 (RIP), R24;
+        vbroadcasti128 .Lshuf_ror16 rRIP, R16;
+        vbroadcasti128 .Lshuf_ror24 rRIP, R24;
 
-        vmovdqa .Liv+(0 * 8) (RIP), ROW3;
-        vmovdqa .Liv+(4 * 8) (RIP), ROW4;
+        vmovdqa .Liv+(0 * 8) rRIP, ROW3;
+        vmovdqa .Liv+(4 * 8) rRIP, ROW4;
 
         vmovdqu (STATE_H + 0 * 8)(RSTATE), ROW1;
         vmovdqu (STATE_H + 4 * 8)(RSTATE), ROW2;
@@ -264,8 +264,8 @@ _gcry_blake2b_transform_amd64_avx2:
         vpxor ROW3, ROW1, ROW1;
         vpxor ROW4, ROW2, ROW2;
 
-        vmovdqa .Liv+(0 * 8) (RIP), ROW3;
-        vmovdqa .Liv+(4 * 8) (RIP), ROW4;
+        vmovdqa .Liv+(0 * 8) rRIP, ROW3;
+        vmovdqa .Liv+(4 * 8) rRIP, ROW4;
 
         vpxor (STATE_H + 0 * 8)(RSTATE), ROW1, ROW1;
         vpxor (STATE_H + 4 * 8)(RSTATE), ROW2, ROW2;
diff --git a/cipher/blake2s-amd64-avx.S b/cipher/blake2s-amd64-avx.S
index 19837326..5b936758 100644
--- a/cipher/blake2s-amd64-avx.S
+++ b/cipher/blake2s-amd64-avx.S
@@ -197,11 +197,11 @@ _gcry_blake2s_transform_amd64_avx:
 
         addq $64, (STATE_T + 0)(RSTATE);
 
-        vmovdqa .Lshuf_ror16 (RIP), R16;
-        vmovdqa .Lshuf_ror8 (RIP), R8;
+        vmovdqa .Lshuf_ror16 rRIP, R16;
+        vmovdqa .Lshuf_ror8 rRIP, R8;
 
-        vmovdqa .Liv+(0 * 4) (RIP), ROW3;
-        vmovdqa .Liv+(4 * 4) (RIP), ROW4;
+        vmovdqa .Liv+(0 * 4) rRIP, ROW3;
+        vmovdqa .Liv+(4 * 4) rRIP, ROW4;
 
         vmovdqu (STATE_H + 0 * 4)(RSTATE), ROW1;
         vmovdqu (STATE_H + 4 * 4)(RSTATE), ROW2;
@@ -242,8 +242,8 @@ _gcry_blake2s_transform_amd64_avx:
         vpxor ROW3, ROW1, ROW1;
         vpxor ROW4, ROW2, ROW2;
 
-        vmovdqa .Liv+(0 * 4) (RIP), ROW3;
-        vmovdqa .Liv+(4 * 4) (RIP), ROW4;
+        vmovdqa .Liv+(0 * 4) rRIP, ROW3;
+        vmovdqa .Liv+(4 * 4) rRIP, ROW4;
 
         vpxor (STATE_H + 0 * 4)(RSTATE), ROW1, ROW1;
         vpxor (STATE_H + 4 * 4)(RSTATE), ROW2, ROW2;
-- 
2.27.0

